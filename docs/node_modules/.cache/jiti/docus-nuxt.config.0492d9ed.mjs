"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;var _kit = await jitiImport("@nuxt/kit");
var _ofetch = await jitiImport("ofetch");
var _package = await jitiImport("./package.json");
var _module = _interopRequireDefault(await jitiImport("./app/module"));function _interopRequireDefault(e) {return e && e.__esModule ? e : { default: e };}

const { resolve } = (0, _kit.createResolver)("file:///C:/Users/maxim/Documents/GitHub/vekos/docs/node_modules/@nuxt-themes/docus/nuxt.config.ts");

// That allows to overwrite these dependencies paths via `.env` for local development
const envModules = {
  tokens: process?.env?.THEME_DEV_TOKENS_PATH || '@nuxt-themes/tokens',
  elements: process?.env?.THEME_DEV_ELEMENTS_PATH || '@nuxt-themes/elements',
  studio: process?.env?.THEME_DEV_STUDIO_PATH || '@nuxthq/studio',
  typography: process?.env?.THEME_DEV_TYPOGRAPHY_PATH || '@nuxt-themes/typography'
};

const updateModule = (0, _kit.defineNuxtModule)({
  meta: {
    name: '@nuxt-themes/docus'
  },
  setup(_, nuxt) {
    if (nuxt.options.dev) {
      (0, _ofetch.$fetch)('https://registry.npmjs.org/@nuxt-themes/docus/latest').then((release) => {
        if (release.version > _package.version) {
          _kit.logger.info(`A new version of Docus (v${release.version}) is available: https://github.com/nuxt-themes/docus/releases/latest`);
        }
      }).catch(() => {});
    }
  }
});

// https://v3.nuxtjs.org/api/configuration/nuxt.config
var _default = exports.default = defineNuxtConfig({
  routeRules: {
    '/api/search': {
      prerender: true,
      cache: {}
    }
  },
  app: {
    head: {
      htmlAttrs: {
        lang: 'en'
      }
    }
  },
  extends: [
  envModules.typography,
  envModules.elements],

  modules: [
  envModules.tokens,
  envModules.studio,
  '@nuxtjs/color-mode',
  '@nuxt/content',
  '@vueuse/nuxt',
  _module.default,
  updateModule],

  css: [
  resolve('./assets/css/main.css')],

  components: [
  {
    prefix: '',
    path: resolve('./components/app'),
    global: true
  },
  {
    prefix: '',
    path: resolve('./components/docs'),
    global: true
  }],

  pinceau: {
    studio: true
  },
  content: {
    documentDriven: true,
    highlight: {
      theme: {
        dark: 'github-dark',
        default: 'github-light'
      },
      preload: ['json', 'js', 'ts', 'html', 'css', 'vue', 'diff', 'shell', 'markdown', 'yaml', 'bash', 'ini']
    },
    navigation: {
      fields: ['icon', 'titleTemplate', 'header', 'main', 'aside', 'footer']
    }
  },
  colorMode: {
    classSuffix: '',
    dataValue: 'theme'
  },
  features: {
    inlineStyles: false
  },
  typescript: {
    includeWorkspace: true
  },
  nitro: {
    prerender: {
      ignore: ['/__pinceau_tokens_config.json', '/__pinceau_tokens_schema.json'],
      routes: ['/opensearch.xml']
    }
  }
}); /* v9-e7fd6f0e16c44ffc */
